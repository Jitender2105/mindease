{"version":3,"sources":["../../../src/build/templates/pages-api.ts"],"sourcesContent":["import type { NextApiResponse } from '../../types'\nimport type { IncomingMessage, ServerResponse } from 'node:http'\nimport type { PrerenderManifest } from '..'\nimport type { DevRoutesManifest } from '../../server/lib/router-utils/setup-dev-bundler'\nimport type { InstrumentationOnRequestError } from '../../server/instrumentation/types'\n\nimport { parse } from 'node:url'\nimport { sendError } from '../../server/api-utils'\nimport { RouteKind } from '../../server/route-kind'\nimport type { Span } from '../../server/lib/trace/tracer'\nimport { PagesAPIRouteModule } from '../../server/route-modules/pages-api/module.compiled'\n\nimport { hoist } from './helpers'\n\n// Import the userland code.\nimport * as userland from 'VAR_USERLAND'\nimport { getTracer, SpanKind } from '../../server/lib/trace/tracer'\nimport { BaseServerSpan } from '../../server/lib/trace/constants'\nimport {\n  ensureInstrumentationRegistered,\n  instrumentationOnRequestError,\n} from '../../server/lib/router-utils/instrumentation-globals.external'\nimport { getUtils } from '../../server/server-utils'\nimport { PRERENDER_MANIFEST, ROUTES_MANIFEST } from '../../api/constants'\nimport { isDynamicRoute } from '../../shared/lib/router/utils'\nimport {\n  RouterServerContextSymbol,\n  routerServerGlobal,\n} from '../../server/lib/router-utils/router-server-context'\nimport { removePathPrefix } from '../../shared/lib/router/utils/remove-path-prefix'\nimport {\n  normalizeLocalePath,\n  type PathLocale,\n} from '../../shared/lib/i18n/normalize-locale-path'\nimport { loadManifestFromRelativePath } from '../../server/load-manifest.external'\nimport { getHostname } from '../../shared/lib/get-hostname'\nimport { detectDomainLocale } from '../../shared/lib/i18n/detect-domain-locale'\n\n// Re-export the handler (should be the default export).\nexport default hoist(userland, 'default')\n\n// Re-export config.\nexport const config = hoist(userland, 'config')\n\n// Create and export the route module that will be consumed.\nconst routeModule = new PagesAPIRouteModule({\n  definition: {\n    kind: RouteKind.PAGES_API,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n  },\n  userland,\n})\n\nexport async function handler(\n  req: IncomingMessage,\n  res: ServerResponse,\n  ctx: {\n    waitUntil?: (prom: Promise<void>) => void\n  }\n): Promise<void> {\n  const projectDir =\n    routerServerGlobal[RouterServerContextSymbol]?.dir || process.cwd()\n  const distDir = process.env.__NEXT_RELATIVE_DIST_DIR || ''\n  const isDev = process.env.NODE_ENV === 'development'\n\n  const [routesManifest, prerenderManifest] = await Promise.all([\n    loadManifestFromRelativePath<DevRoutesManifest>(\n      projectDir,\n      distDir,\n      ROUTES_MANIFEST\n    ),\n    loadManifestFromRelativePath<PrerenderManifest>(\n      projectDir,\n      distDir,\n      PRERENDER_MANIFEST\n    ),\n  ])\n  let srcPage = 'VAR_DEFINITION_PAGE'\n\n  // turbopack doesn't normalize `/index` in the page name\n  // so we need to to process dynamic routes properly\n  if (process.env.TURBOPACK) {\n    srcPage = srcPage.replace(/\\/index$/, '')\n  }\n\n  // We need to parse dynamic route params\n  // and do URL normalization here.\n  // TODO: move this into server-utils for re-use\n  const { basePath, i18n, rewrites } = routesManifest\n\n  if (basePath) {\n    req.url = removePathPrefix(req.url || '/', basePath)\n  }\n\n  let localeResult: PathLocale | undefined\n\n  if (i18n) {\n    const urlParts = (req.url || '/').split('?')\n    localeResult = normalizeLocalePath(urlParts[0] || '/', i18n.locales)\n\n    if (localeResult.detectedLocale) {\n      req.url = `${localeResult.pathname}${\n        urlParts[1] ? `?${urlParts[1]}` : ''\n      }`\n    }\n  }\n\n  const parsedUrl = parse(req.url || '/', true)\n  const pageIsDynamic = isDynamicRoute(srcPage)\n\n  const serverUtils = getUtils({\n    page: srcPage,\n    i18n,\n    basePath,\n    rewrites,\n    pageIsDynamic,\n    trailingSlash: process.env.__NEXT_TRAILING_SLASH as any as boolean,\n    caseSensitive: Boolean(routesManifest.caseSensitive),\n  })\n\n  const domainLocale = detectDomainLocale(\n    i18n?.domains,\n    getHostname(parsedUrl, req.headers),\n    localeResult?.detectedLocale\n  )\n\n  const defaultLocale = domainLocale?.defaultLocale || i18n?.defaultLocale\n\n  // Ensure parsedUrl.pathname includes locale before processing\n  // rewrites or they won't match correctly.\n  if (defaultLocale && !localeResult?.detectedLocale) {\n    parsedUrl.pathname = `/${defaultLocale}${parsedUrl.pathname}`\n  }\n\n  const rewriteParamKeys = Object.keys(\n    serverUtils.handleRewrites(req, parsedUrl)\n  )\n  serverUtils.normalizeCdnUrl(req, [\n    ...rewriteParamKeys,\n    ...Object.keys(serverUtils.defaultRouteRegex?.groups || {}),\n  ])\n\n  const params: Record<string, undefined | string | string[]> =\n    serverUtils.dynamicRouteMatcher\n      ? serverUtils.dynamicRouteMatcher(\n          localeResult?.pathname || parsedUrl.pathname || ''\n        ) || {}\n      : {}\n\n  const query = {\n    ...parsedUrl.query,\n    ...params,\n  }\n  serverUtils.normalizeQueryParams(query)\n\n  if (pageIsDynamic) {\n    const result = serverUtils.normalizeDynamicRouteParams(query, true)\n\n    if (result.hasValidParams) {\n      Object.assign(query, result.params)\n    }\n  }\n\n  // ensure instrumentation is registered and pass\n  // onRequestError below\n  await ensureInstrumentationRegistered(projectDir, distDir)\n\n  try {\n    const method = req.method || 'GET'\n    const tracer = getTracer()\n\n    const activeSpan = tracer.getActiveScopeSpan()\n\n    const invokeRouteModule = async (span?: Span) =>\n      routeModule\n        .render(req, res, {\n          query,\n          params,\n          allowedRevalidateHeaderKeys: process.env\n            .__NEXT_ALLOWED_REVALIDATE_HEADERS as any as string[],\n          multiZoneDraftMode: Boolean(process.env.__NEXT_MULTI_ZONE_DRAFT_MODE),\n          trustHostHeader: process.env\n            .__NEXT_TRUST_HOST_HEADER as any as boolean,\n          // TODO: get this from from runtime env so manifest\n          // doesn't need to load\n          previewProps: prerenderManifest.preview,\n          propagateError: false,\n          dev: isDev,\n          page: 'VAR_DEFINITION_PAGE',\n\n          onError: (...args: Parameters<InstrumentationOnRequestError>) =>\n            instrumentationOnRequestError(projectDir, distDir, ...args),\n        })\n        .finally(() => {\n          if (!span) return\n\n          span.setAttributes({\n            'http.status_code': res.statusCode,\n            'next.rsc': false,\n          })\n\n          const rootSpanAttributes = tracer.getRootSpanAttributes()\n          // We were unable to get attributes, probably OTEL is not enabled\n          if (!rootSpanAttributes) {\n            return\n          }\n\n          if (\n            rootSpanAttributes.get('next.span_type') !==\n            BaseServerSpan.handleRequest\n          ) {\n            console.warn(\n              `Unexpected root span type '${rootSpanAttributes.get(\n                'next.span_type'\n              )}'. Please report this Next.js issue https://github.com/vercel/next.js`\n            )\n            return\n          }\n\n          const route = rootSpanAttributes.get('next.route')\n          if (route) {\n            const name = `${method} ${route}`\n\n            span.setAttributes({\n              'next.route': route,\n              'http.route': route,\n              'next.span_name': name,\n            })\n            span.updateName(name)\n          } else {\n            span.updateName(`${method} ${req.url}`)\n          }\n        })\n\n    // TODO: activeSpan code path is for when wrapped by\n    // next-server can be removed when this is no longer used\n    if (activeSpan) {\n      await invokeRouteModule(activeSpan)\n    } else {\n      await tracer.withPropagatedContext(req.headers, () =>\n        tracer.trace(\n          BaseServerSpan.handleRequest,\n          {\n            spanName: `${method} ${req.url}`,\n            kind: SpanKind.SERVER,\n            attributes: {\n              'http.method': method,\n              'http.target': req.url,\n            },\n          },\n          invokeRouteModule\n        )\n      )\n    }\n  } catch (err) {\n    // we re-throw in dev to show the error overlay\n    if (isDev) {\n      throw err\n    }\n    // this is technically an invariant as error handling\n    // should be done inside of api-resolver onError\n    sendError(res as NextApiResponse, 500, 'Internal Server Error')\n  } finally {\n    // We don't allow any waitUntil work in pages API routes currently\n    // so if callback is present return with resolved promise since no\n    // pending work\n    ctx.waitUntil?.(Promise.resolve())\n  }\n}\n"],"names":["config","handler","hoist","userland","routeModule","PagesAPIRouteModule","definition","kind","RouteKind","PAGES_API","page","pathname","bundlePath","filename","req","res","ctx","routerServerGlobal","serverUtils","projectDir","RouterServerContextSymbol","dir","process","cwd","distDir","env","__NEXT_RELATIVE_DIST_DIR","isDev","NODE_ENV","routesManifest","prerenderManifest","Promise","all","loadManifestFromRelativePath","ROUTES_MANIFEST","PRERENDER_MANIFEST","srcPage","TURBOPACK","replace","basePath","i18n","rewrites","url","removePathPrefix","localeResult","urlParts","split","normalizeLocalePath","locales","detectedLocale","parsedUrl","parse","pageIsDynamic","isDynamicRoute","getUtils","trailingSlash","__NEXT_TRAILING_SLASH","caseSensitive","Boolean","domainLocale","detectDomainLocale","domains","getHostname","headers","defaultLocale","rewriteParamKeys","Object","keys","handleRewrites","normalizeCdnUrl","defaultRouteRegex","groups","params","dynamicRouteMatcher","query","normalizeQueryParams","result","normalizeDynamicRouteParams","hasValidParams","assign","ensureInstrumentationRegistered","method","tracer","getTracer","activeSpan","getActiveScopeSpan","invokeRouteModule","span","render","allowedRevalidateHeaderKeys","__NEXT_ALLOWED_REVALIDATE_HEADERS","multiZoneDraftMode","__NEXT_MULTI_ZONE_DRAFT_MODE","trustHostHeader","__NEXT_TRUST_HOST_HEADER","previewProps","preview","propagateError","dev","onError","args","instrumentationOnRequestError","finally","setAttributes","statusCode","rootSpanAttributes","getRootSpanAttributes","get","BaseServerSpan","handleRequest","console","warn","route","name","updateName","withPropagatedContext","trace","spanName","SpanKind","SERVER","attributes","err","sendError","waitUntil","resolve"],"mappings":"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","ignoreList":[0]}