{"version":3,"sources":["../../../src/build/templates/pages-api.ts"],"sourcesContent":["import type { NextApiResponse } from '../../types'\nimport type { IncomingMessage, ServerResponse } from 'node:http'\nimport type { PrerenderManifest } from '..'\nimport type { DevRoutesManifest } from '../../server/lib/router-utils/setup-dev-bundler'\nimport type { InstrumentationOnRequestError } from '../../server/instrumentation/types'\n\nimport { parse } from 'node:url'\nimport { sendError } from '../../server/api-utils'\nimport { RouteKind } from '../../server/route-kind'\nimport type { Span } from '../../server/lib/trace/tracer'\nimport { PagesAPIRouteModule } from '../../server/route-modules/pages-api/module.compiled'\n\nimport { hoist } from './helpers'\n\n// Import the userland code.\nimport * as userland from 'VAR_USERLAND'\nimport { getTracer, SpanKind } from '../../server/lib/trace/tracer'\nimport { BaseServerSpan } from '../../server/lib/trace/constants'\nimport {\n  ensureInstrumentationRegistered,\n  instrumentationOnRequestError,\n} from '../../server/lib/router-utils/instrumentation-globals.external'\nimport { getUtils } from '../../server/server-utils'\nimport { PRERENDER_MANIFEST, ROUTES_MANIFEST } from '../../api/constants'\nimport { isDynamicRoute } from '../../shared/lib/router/utils'\nimport {\n  RouterServerContextSymbol,\n  routerServerGlobal,\n} from '../../server/lib/router-utils/router-server-context'\nimport { removePathPrefix } from '../../shared/lib/router/utils/remove-path-prefix'\nimport {\n  normalizeLocalePath,\n  type PathLocale,\n} from '../../shared/lib/i18n/normalize-locale-path'\nimport { loadManifestFromRelativePath } from '../../server/load-manifest.external'\nimport { getHostname } from '../../shared/lib/get-hostname'\nimport { detectDomainLocale } from '../../shared/lib/i18n/detect-domain-locale'\n\n// Re-export the handler (should be the default export).\nexport default hoist(userland, 'default')\n\n// Re-export config.\nexport const config = hoist(userland, 'config')\n\n// Create and export the route module that will be consumed.\nconst routeModule = new PagesAPIRouteModule({\n  definition: {\n    kind: RouteKind.PAGES_API,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n  },\n  userland,\n})\n\nexport async function handler(\n  req: IncomingMessage,\n  res: ServerResponse,\n  ctx: {\n    waitUntil?: (prom: Promise<void>) => void\n  }\n): Promise<void> {\n  const projectDir =\n    routerServerGlobal[RouterServerContextSymbol]?.dir || process.cwd()\n  const distDir = process.env.__NEXT_RELATIVE_DIST_DIR || ''\n  const isDev = process.env.NODE_ENV === 'development'\n\n  const [routesManifest, prerenderManifest] = await Promise.all([\n    loadManifestFromRelativePath<DevRoutesManifest>(\n      projectDir,\n      distDir,\n      ROUTES_MANIFEST\n    ),\n    loadManifestFromRelativePath<PrerenderManifest>(\n      projectDir,\n      distDir,\n      PRERENDER_MANIFEST\n    ),\n  ])\n  let srcPage = 'VAR_DEFINITION_PAGE'\n\n  // turbopack doesn't normalize `/index` in the page name\n  // so we need to to process dynamic routes properly\n  if (process.env.TURBOPACK) {\n    srcPage = srcPage.replace(/\\/index$/, '')\n  }\n\n  // We need to parse dynamic route params\n  // and do URL normalization here.\n  // TODO: move this into server-utils for re-use\n  const { basePath, i18n, rewrites } = routesManifest\n\n  if (basePath) {\n    req.url = removePathPrefix(req.url || '/', basePath)\n  }\n\n  let localeResult: PathLocale | undefined\n\n  if (i18n) {\n    const urlParts = (req.url || '/').split('?')\n    localeResult = normalizeLocalePath(urlParts[0] || '/', i18n.locales)\n\n    if (localeResult.detectedLocale) {\n      req.url = `${localeResult.pathname}${\n        urlParts[1] ? `?${urlParts[1]}` : ''\n      }`\n    }\n  }\n\n  const parsedUrl = parse(req.url || '/', true)\n  const pageIsDynamic = isDynamicRoute(srcPage)\n\n  const serverUtils = getUtils({\n    page: srcPage,\n    i18n,\n    basePath,\n    rewrites,\n    pageIsDynamic,\n    trailingSlash: process.env.__NEXT_TRAILING_SLASH as any as boolean,\n    caseSensitive: Boolean(routesManifest.caseSensitive),\n  })\n\n  const domainLocale = detectDomainLocale(\n    i18n?.domains,\n    getHostname(parsedUrl, req.headers),\n    localeResult?.detectedLocale\n  )\n\n  const defaultLocale = domainLocale?.defaultLocale || i18n?.defaultLocale\n\n  // Ensure parsedUrl.pathname includes locale before processing\n  // rewrites or they won't match correctly.\n  if (defaultLocale && !localeResult?.detectedLocale) {\n    parsedUrl.pathname = `/${defaultLocale}${parsedUrl.pathname}`\n  }\n\n  const rewriteParamKeys = Object.keys(\n    serverUtils.handleRewrites(req, parsedUrl)\n  )\n  serverUtils.normalizeCdnUrl(req, [\n    ...rewriteParamKeys,\n    ...Object.keys(serverUtils.defaultRouteRegex?.groups || {}),\n  ])\n\n  const params: Record<string, undefined | string | string[]> =\n    serverUtils.dynamicRouteMatcher\n      ? serverUtils.dynamicRouteMatcher(\n          localeResult?.pathname || parsedUrl.pathname || ''\n        ) || {}\n      : {}\n\n  const query = {\n    ...parsedUrl.query,\n    ...params,\n  }\n  serverUtils.normalizeQueryParams(query)\n\n  if (pageIsDynamic) {\n    const result = serverUtils.normalizeDynamicRouteParams(query, true)\n\n    if (result.hasValidParams) {\n      Object.assign(query, result.params)\n    }\n  }\n\n  // ensure instrumentation is registered and pass\n  // onRequestError below\n  await ensureInstrumentationRegistered(projectDir, distDir)\n\n  try {\n    const method = req.method || 'GET'\n    const tracer = getTracer()\n\n    const activeSpan = tracer.getActiveScopeSpan()\n\n    const invokeRouteModule = async (span?: Span) =>\n      routeModule\n        .render(req, res, {\n          query,\n          params,\n          allowedRevalidateHeaderKeys: process.env\n            .__NEXT_ALLOWED_REVALIDATE_HEADERS as any as string[],\n          multiZoneDraftMode: Boolean(process.env.__NEXT_MULTI_ZONE_DRAFT_MODE),\n          trustHostHeader: process.env\n            .__NEXT_TRUST_HOST_HEADER as any as boolean,\n          // TODO: get this from from runtime env so manifest\n          // doesn't need to load\n          previewProps: prerenderManifest.preview,\n          propagateError: false,\n          dev: isDev,\n          page: 'VAR_DEFINITION_PAGE',\n\n          onError: (...args: Parameters<InstrumentationOnRequestError>) =>\n            instrumentationOnRequestError(projectDir, distDir, ...args),\n        })\n        .finally(() => {\n          if (!span) return\n\n          span.setAttributes({\n            'http.status_code': res.statusCode,\n            'next.rsc': false,\n          })\n\n          const rootSpanAttributes = tracer.getRootSpanAttributes()\n          // We were unable to get attributes, probably OTEL is not enabled\n          if (!rootSpanAttributes) {\n            return\n          }\n\n          if (\n            rootSpanAttributes.get('next.span_type') !==\n            BaseServerSpan.handleRequest\n          ) {\n            console.warn(\n              `Unexpected root span type '${rootSpanAttributes.get(\n                'next.span_type'\n              )}'. Please report this Next.js issue https://github.com/vercel/next.js`\n            )\n            return\n          }\n\n          const route = rootSpanAttributes.get('next.route')\n          if (route) {\n            const name = `${method} ${route}`\n\n            span.setAttributes({\n              'next.route': route,\n              'http.route': route,\n              'next.span_name': name,\n            })\n            span.updateName(name)\n          } else {\n            span.updateName(`${method} ${req.url}`)\n          }\n        })\n\n    // TODO: activeSpan code path is for when wrapped by\n    // next-server can be removed when this is no longer used\n    if (activeSpan) {\n      await invokeRouteModule(activeSpan)\n    } else {\n      await tracer.withPropagatedContext(req.headers, () =>\n        tracer.trace(\n          BaseServerSpan.handleRequest,\n          {\n            spanName: `${method} ${req.url}`,\n            kind: SpanKind.SERVER,\n            attributes: {\n              'http.method': method,\n              'http.target': req.url,\n            },\n          },\n          invokeRouteModule\n        )\n      )\n    }\n  } catch (err) {\n    // we re-throw in dev to show the error overlay\n    if (isDev) {\n      throw err\n    }\n    // this is technically an invariant as error handling\n    // should be done inside of api-resolver onError\n    sendError(res as NextApiResponse, 500, 'Internal Server Error')\n  } finally {\n    // We don't allow any waitUntil work in pages API routes currently\n    // so if callback is present return with resolved promise since no\n    // pending work\n    ctx.waitUntil?.(Promise.resolve())\n  }\n}\n"],"names":["parse","sendError","RouteKind","PagesAPIRouteModule","hoist","userland","getTracer","SpanKind","BaseServerSpan","ensureInstrumentationRegistered","instrumentationOnRequestError","getUtils","PRERENDER_MANIFEST","ROUTES_MANIFEST","isDynamicRoute","RouterServerContextSymbol","routerServerGlobal","removePathPrefix","normalizeLocalePath","loadManifestFromRelativePath","getHostname","detectDomainLocale","config","routeModule","definition","kind","PAGES_API","page","pathname","bundlePath","filename","handler","req","res","ctx","serverUtils","projectDir","dir","process","cwd","distDir","env","__NEXT_RELATIVE_DIST_DIR","isDev","NODE_ENV","routesManifest","prerenderManifest","Promise","all","srcPage","TURBOPACK","replace","basePath","i18n","rewrites","url","localeResult","urlParts","split","locales","detectedLocale","parsedUrl","pageIsDynamic","trailingSlash","__NEXT_TRAILING_SLASH","caseSensitive","Boolean","domainLocale","domains","headers","defaultLocale","rewriteParamKeys","Object","keys","handleRewrites","normalizeCdnUrl","defaultRouteRegex","groups","params","dynamicRouteMatcher","query","normalizeQueryParams","result","normalizeDynamicRouteParams","hasValidParams","assign","method","tracer","activeSpan","getActiveScopeSpan","invokeRouteModule","span","render","allowedRevalidateHeaderKeys","__NEXT_ALLOWED_REVALIDATE_HEADERS","multiZoneDraftMode","__NEXT_MULTI_ZONE_DRAFT_MODE","trustHostHeader","__NEXT_TRUST_HOST_HEADER","previewProps","preview","propagateError","dev","onError","args","finally","setAttributes","statusCode","rootSpanAttributes","getRootSpanAttributes","get","handleRequest","console","warn","route","name","updateName","withPropagatedContext","trace","spanName","SERVER","attributes","err","waitUntil","resolve"],"mappings":"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","ignoreList":[0]}