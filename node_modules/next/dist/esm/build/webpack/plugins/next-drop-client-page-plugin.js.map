{"version":3,"sources":["../../../../src/build/webpack/plugins/next-drop-client-page-plugin.ts"],"sourcesContent":["import type { webpack } from 'next/dist/compiled/webpack/webpack'\nimport { STRING_LITERAL_DROP_BUNDLE } from '../../../shared/lib/constants'\nimport { extname } from 'path'\n\nexport const ampFirstEntryNamesMap: WeakMap<webpack.Compilation, string[]> =\n  new WeakMap()\n\nconst PLUGIN_NAME = 'DropAmpFirstPagesPlugin'\n\n// Prevents outputting client pages when they are not needed\nexport class DropClientPage implements webpack.WebpackPluginInstance {\n  ampPages = new Set<string>()\n\n  apply(compiler: webpack.Compiler) {\n    const isRspack = !!(compiler as any).rspack\n\n    if (isRspack) {\n      // For Rspack, use a simpler emit hook-based approach\n      compiler.hooks.emit.tap(PLUGIN_NAME, (compilation: any) => {\n        Object.keys(compilation.assets).forEach((assetKey) => {\n          const asset = compilation.assets[assetKey]\n\n          if (asset?._value?.includes?.(STRING_LITERAL_DROP_BUNDLE)) {\n            const cleanAssetKey = assetKey.replace(/\\\\/g, '/')\n            const page = '/' + cleanAssetKey.split('pages/')[1]\n            const pageNoExt = page.split(extname(page))[0]\n\n            delete compilation.assets[assetKey]\n\n            // Detect being re-ran through a child compiler and don't re-mark the\n            // page as AMP\n            if (!pageNoExt.endsWith('.module')) {\n              this.ampPages.add(pageNoExt.replace(/\\/index$/, '') || '/')\n            }\n          }\n        })\n      })\n\n      return\n    }\n\n    compiler.hooks.compilation.tap(\n      PLUGIN_NAME,\n      (compilation: any, { normalModuleFactory }: any) => {\n        // Recursively look up the issuer till it ends up at the root\n        function findEntryModule(mod: any): webpack.Module | null {\n          const queue = new Set([mod])\n          for (const module of queue) {\n            const incomingConnections =\n              compilation.moduleGraph.getIncomingConnections(module)\n\n            for (const incomingConnection of incomingConnections) {\n              if (!incomingConnection.originModule) return module\n              queue.add(incomingConnection.originModule)\n            }\n          }\n\n          return null\n        }\n\n        function handler(parser: any) {\n          function markAsAmpFirst() {\n            const entryModule = findEntryModule(parser.state.module)\n\n            if (!entryModule) {\n              return\n            }\n\n            // @ts-ignore buildInfo exists on Module\n            entryModule.buildInfo = entryModule.buildInfo || {}\n            entryModule.buildInfo.NEXT_ampFirst = true\n          }\n\n          parser.hooks.preDeclarator.tap(PLUGIN_NAME, (declarator: any) => {\n            if (declarator?.id?.name === STRING_LITERAL_DROP_BUNDLE) {\n              markAsAmpFirst()\n            }\n          })\n        }\n\n        normalModuleFactory.hooks.parser\n          .for('javascript/auto')\n          .tap(PLUGIN_NAME, handler)\n\n        normalModuleFactory.hooks.parser\n          .for('javascript/esm')\n          .tap(PLUGIN_NAME, handler)\n\n        normalModuleFactory.hooks.parser\n          .for('javascript/dynamic')\n          .tap(PLUGIN_NAME, handler)\n\n        if (!ampFirstEntryNamesMap.has(compilation)) {\n          ampFirstEntryNamesMap.set(compilation, [])\n        }\n\n        const ampFirstEntryNamesItem = ampFirstEntryNamesMap.get(\n          compilation\n        ) as string[]\n\n        compilation.hooks.seal.tap(PLUGIN_NAME, () => {\n          for (const [name, entryData] of compilation.entries) {\n            for (const dependency of entryData.dependencies) {\n              const module = compilation.moduleGraph.getModule(dependency)\n              if (module?.buildInfo?.NEXT_ampFirst) {\n                ampFirstEntryNamesItem.push(name)\n                compilation.entries.delete(name)\n              }\n            }\n          }\n        })\n      }\n    )\n  }\n}\n"],"names":["STRING_LITERAL_DROP_BUNDLE","extname","ampFirstEntryNamesMap","WeakMap","PLUGIN_NAME","DropClientPage","apply","compiler","isRspack","rspack","hooks","emit","tap","compilation","Object","keys","assets","forEach","assetKey","asset","_value","includes","cleanAssetKey","replace","page","split","pageNoExt","endsWith","ampPages","add","normalModuleFactory","findEntryModule","mod","queue","Set","module","incomingConnections","moduleGraph","getIncomingConnections","incomingConnection","originModule","handler","parser","markAsAmpFirst","entryModule","state","buildInfo","NEXT_ampFirst","preDeclarator","declarator","id","name","for","has","set","ampFirstEntryNamesItem","get","seal","entryData","entries","dependency","dependencies","getModule","push","delete"],"mappings":"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","ignoreList":[0]}